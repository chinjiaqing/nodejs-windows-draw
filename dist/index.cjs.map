{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import koffi from \"koffi\";\r\n\r\n// 1. 定义RECT结构体（与Windows API一致）\r\nconst RECT = koffi.struct(\"RECT\", {\r\n\tleft: \"long\",  // 偏移0字节（4字节）\r\n\ttop: \"long\",   // 偏移4字节（4字节）\r\n\tright: \"long\", // 偏移8字节（4字节）\r\n\tbottom: \"long\" // 偏移12字节（4字节）\r\n});\r\n\r\n// 2. 定义类型别名（简化API调用）\r\nkoffi.alias(\"HWND\", \"void*\");\r\nkoffi.alias(\"HDC\", \"void*\");\r\nkoffi.alias(\"HBRUSH\", \"void*\");\r\nkoffi.alias(\"LPRECT\", \"void*\"); // LPRECT = 指向RECT的指针\r\n\r\n// 3. 加载Windows API库\r\nconst user32 = koffi.load(\"user32.dll\");\r\nconst gdi32 = koffi.load(\"gdi32.dll\");\r\n\r\n// 4. 定义API函数（严格遵循Windows API签名）\r\nconst GetDC = user32.func(\"HDC __stdcall GetDC(HWND hWnd)\");\r\nconst ReleaseDC = user32.func(\"int __stdcall ReleaseDC(HWND hWnd, HDC hDC)\");\r\nconst GetSystemMetrics = user32.func(\"int __stdcall GetSystemMetrics(int nIndex)\");\r\nconst CreateSolidBrush = gdi32.func(\"HBRUSH __stdcall CreateSolidBrush(uint32 color)\");\r\nconst FillRect = user32.func(\"int __stdcall FillRect(HDC hdc, LPRECT lprc, HBRUSH hbr)\");\r\nconst DeleteObject = gdi32.func(\"int __stdcall DeleteObject(void* hObject)\");\r\n\r\n// 5. 主绘制函数（实现全屏填充绿色）\r\nfunction drawFullScreenRect() {\r\n\t// 获取桌面DC（null=桌面窗口，需管理员权限）\r\n\tconst hdc = GetDC(null);\r\n\tif (!hdc) {\r\n\t\tconsole.error(\"GetDC(NULL) 失败（需管理员权限运行）\");\r\n\t\treturn;\r\n\t}\r\n\r\n\t// 获取屏幕尺寸（SM_CXSCREEN=0：宽度；SM_CYSCREEN=1：高度）\r\n\tconst width = GetSystemMetrics(0);\r\n\tconst height = GetSystemMetrics(1);\r\n\tconsole.log(`屏幕尺寸：${width}x${height}`);\r\n\r\n\t// -------------------------- 核心修复：传递RECT指针 --------------------------\r\n\t// a. 定义填充区域（全屏）\r\n\tconst fullScreenRect = {\r\n\t\tleft: 0,\r\n\t\ttop: 0,\r\n\t\tright: width,\r\n\t\tbottom: height\r\n\t};\r\n\t// b. 分配1个RECT结构体的内存（返回koffi.Buffer，代表LPRECT指针）\r\n\tconst rectBuffer = koffi.alloc(RECT, 1);\r\n\t// c. 将fullScreenRect写入RECT缓冲区（确保内存布局符合Windows API要求）\r\n\tkoffi.write(rectBuffer, RECT, fullScreenRect); // 关键：将对象转换为结构体指针\r\n\t// -----------------------------------------------------------------------------------\r\n\r\n\t// 创建绿色画刷（Windows颜色格式为BGR，0x0000FF00=绿色）\r\n\tconst brush = CreateSolidBrush(0x0000FF00);\r\n\tif (!brush) {\r\n\t\tconsole.error(\"CreateSolidBrush 失败\");\r\n\t\tReleaseDC(null, hdc);\r\n\t\tkoffi.free(rectBuffer); // 释放内存\r\n\t\treturn;\r\n\t}\r\n\r\n\t// 填充整个屏幕为绿色（第二个参数传递RECT指针）\r\n\tconst ret = FillRect(hdc, rectBuffer, brush); // 关键：rectBuffer是LPRECT指针\r\n\tif (ret === 0) {\r\n\t\tconsole.error(\"FillRect 失败（错误码：\", koffi.errno(), \"）\");\r\n\t} else {\r\n\t\tconsole.log(\"FillRect 成功（屏幕已填充为绿色）\");\r\n\t}\r\n\r\n\t// 释放资源（避免内存泄漏）\r\n\tDeleteObject(brush); // 释放画刷\r\n\tReleaseDC(null, hdc); // 释放DC\r\n\tkoffi.free(rectBuffer); // 释放RECT缓冲区\r\n}\r\n\r\n// 运行绘制函数\r\ndrawFullScreenRect();"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mBAAkB;AAGlB,IAAM,OAAO,aAAAA,QAAM,OAAO,QAAQ;AAAA,EACjC,MAAM;AAAA;AAAA,EACN,KAAK;AAAA;AAAA,EACL,OAAO;AAAA;AAAA,EACP,QAAQ;AAAA;AACT,CAAC;AAGD,aAAAA,QAAM,MAAM,QAAQ,OAAO;AAC3B,aAAAA,QAAM,MAAM,OAAO,OAAO;AAC1B,aAAAA,QAAM,MAAM,UAAU,OAAO;AAC7B,aAAAA,QAAM,MAAM,UAAU,OAAO;AAG7B,IAAM,SAAS,aAAAA,QAAM,KAAK,YAAY;AACtC,IAAM,QAAQ,aAAAA,QAAM,KAAK,WAAW;AAGpC,IAAM,QAAQ,OAAO,KAAK,gCAAgC;AAC1D,IAAM,YAAY,OAAO,KAAK,6CAA6C;AAC3E,IAAM,mBAAmB,OAAO,KAAK,4CAA4C;AACjF,IAAM,mBAAmB,MAAM,KAAK,iDAAiD;AACrF,IAAM,WAAW,OAAO,KAAK,0DAA0D;AACvF,IAAM,eAAe,MAAM,KAAK,2CAA2C;AAG3E,SAAS,qBAAqB;AAE7B,QAAM,MAAM,MAAM,IAAI;AACtB,MAAI,CAAC,KAAK;AACT,YAAQ,MAAM,sFAA0B;AACxC;AAAA,EACD;AAGA,QAAM,QAAQ,iBAAiB,CAAC;AAChC,QAAM,SAAS,iBAAiB,CAAC;AACjC,UAAQ,IAAI,iCAAQ,KAAK,IAAI,MAAM,EAAE;AAIrC,QAAM,iBAAiB;AAAA,IACtB,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,EACT;AAEA,QAAM,aAAa,aAAAA,QAAM,MAAM,MAAM,CAAC;AAEtC,eAAAA,QAAM,MAAM,YAAY,MAAM,cAAc;AAI5C,QAAM,QAAQ,iBAAiB,KAAU;AACzC,MAAI,CAAC,OAAO;AACX,YAAQ,MAAM,+BAAqB;AACnC,cAAU,MAAM,GAAG;AACnB,iBAAAA,QAAM,KAAK,UAAU;AACrB;AAAA,EACD;AAGA,QAAM,MAAM,SAAS,KAAK,YAAY,KAAK;AAC3C,MAAI,QAAQ,GAAG;AACd,YAAQ,MAAM,uDAAoB,aAAAA,QAAM,MAAM,GAAG,QAAG;AAAA,EACrD,OAAO;AACN,YAAQ,IAAI,mFAAuB;AAAA,EACpC;AAGA,eAAa,KAAK;AAClB,YAAU,MAAM,GAAG;AACnB,eAAAA,QAAM,KAAK,UAAU;AACtB;AAGA,mBAAmB;","names":["koffi"]}